Написать 2 теста для API сайта coinmarketcap.com.

Можно использовать Python или любой другой

1) Получить данные о 10 тикерах с наибольшим объемом за последние 24 часа.

  Считать, что тест выполнился успешно, если:

    * успешный ответ от ресурса приходит менее чем за 500мс;

    * информация по каждой валюте актуальна (т.е. берется за текущий день);

    * размер полученного пакета данных не должен превышать 10кб;

		!!!Для запуска нужно подставить ваши API ключи в файл coinAPI.py и finTechTh.py!!!

Решение:
1. использовать файл test.py и папку Coin. запускать командой - python -m unittest test.py.
2. функция coinAPIres возвращает время отлкиа от сайта и данные о 10 токенах которые можно получить по запросу в отсортированном виде по объему торгов за 24 часа.
данные возвращаються в виде массива словарей(информация о ключах есть на сайте).
3. тест самый элементраный - без классов. После запроса проверяем возвращаемое время отклика на соот-и условию
4. проверку размера пакета не успел сделать

2) Запустить тест №1 параллельно/асинхронно 8 раз и рассчитать rps (скорость ответов от сервера в секунду) и 80-перцентиль времеми ответа сервера (80% latency):

  Считать, что тест выполнился успешно, если:

    * все запущенные тесты выполнились успешно;

    * rps > 5;

    * 80% latency < 450мс;
Решение:
1. использовать файл finTechTh.py. запускать - python finTechTh.py
2. здесь я не успел разобраться с тестированием нескольких потоков. в связи с этим тестирование идет "топорным" методом.
в один файл вшил и функцию которую проверяю и потоки. В связи с этим добавил в coinAPIres() несколько строк: логирование в файл потоковых данных, занесение
времени отклика в массив глобальный. После окончания всех потоков вычисляю 80% процентиль.
3. rps > 5 - не совсем понял условие. rps (скорость ответов от сервера в секунду) - насколько я понял должно считаться так: (количестово запросов) / (общее время всех запросов).
Но как он может быть более 5? возможно не совсем понял задачу или не верный алгоритм. 


Резюме:
1. у первой задачи нужно проверить объем возвращаемых данных
2. У второй задачи нужно провести тест по потокам без  изменения кода у функции.

Я первый раз столкнулся с задачами тестирования и обработкой потоков(сделал все что мог для того что бы уложиться во времени). 
В случае прохожднения тестового задания надеюсь на помощь с вашей стороны